name: Update Repository

on:
  repository_dispatch:
    types: [package-updated]
  workflow_dispatch:

permissions:
  contents: write
  packages: write

jobs:
  update-repo:
    runs-on: ubuntu-latest
    container:
      image: archlinux:base-devel

    steps:
      - name: Install git
        run: |
          pacman -Syu --noconfirm
          pacman -S --noconfirm git wget pacman

      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure git (BOII THIS IS SO TUFF ☠️☠️☠️☠️☠️)
        run: |
          git config --global --add safe.directory $GITHUB_WORKSPACE
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"

      - name: Setup repository structure
        run: |
          mkdir -p $GITHUB_WORKSPACE/x86_64
          touch $GITHUB_WORKSPACE/x86_64/.gitkeep
          if [ ! -f "$GITHUB_WORKSPACE/x86_64/nebula.db.tar.gz" ]; then
            cd $GITHUB_WORKSPACE/x86_64
            repo-add nebula.db.tar.gz
          fi

      - name: Download package
        if: github.event_name == 'repository_dispatch'
        run: |
          cd $GITHUB_WORKSPACE/x86_64
          wget -nv https://github.com/teamnebulaos/${{ github.event.client_payload.package }}/releases/download/${{ github.event.client_payload.version }}/*.pkg.tar.zst || echo "No packages found"

      - name: Update repository
        run: |
          cd $GITHUB_WORKSPACE/x86_64
          rm -f nebula.db*
          rm -f nebula.files*
          repo-add -n -R nebula.db.tar.gz *.pkg.tar.zst
          
      - name: Push changes
        run: |
          git add .
          git commit -m "Update repository with ${{ github.event.client_payload.package }} ${{ github.event.client_payload.version }}" || echo "No changes to commit"
          git push https://${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git HEAD:main

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: repo
          name: Repository Update
          draft: false
          prerelease: false
          files: |
            x86_64/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

